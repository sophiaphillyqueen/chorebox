# local-configure: Configures -chorebox- for user's own account
# Copyright (C) 2014  Sophia Elizabeth Shapira

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# ########################

# First, I initialize the $origidir variable to the source-code
# directory.
origidir="$(dirname "${0}")"
abs_origidir="$(cd "${origidir}" && pwd)"
# .. and I identify the for-local C compiler and error flags
sh "${origidir}/ident-local-cc.sh" "${@}" > temporary--c-compiler.txt
sh "${origidir}/set-extra-cc-flags.sh" "${@}"


say_yes=yes
say_no=no
try_backup_on=yes
native_conf_here=yes

# Let us try to compile the C-based version here:
sh "${origidir}/build-temp-from-c.sh" temporary--chorebox-in \
  "${origidir}/chorebox-in/autodetect_home_bin_dir.c" \
  "${origidir}/chorebox-in/own_this_dir.c" \
  "${origidir}/libchorebox/csrc/chorebox_apend_string.c" \
  "${origidir}/libchorebox/csrc/chorebox_join_string.c" \
  "${origidir}/libchorebox/csrc/chorebox_command_line.c" \
  "${origidir}/libchorebox/csrc/vars.c" \
  "${origidir}/libchorebox/csrc/chorebox_mlc.c" \
  "${origidir}/libchorebox/csrc/chorebox_colsep_to_list.c" \
  "${origidir}/libchorebox/csrc/chorebox_str_lis_dump.c" \
  "${origidir}/libchorebox/csrc/chorebox_free_str_list.c" \
  "${origidir}/libchorebox/csrc/chorebox_str_lis_apnd.c" \
"${origidir}/chorebox-in/main.c" || try_backup_on=no


if [ $try_backup_on = $say_no ]; then
  native_conf_here=no
fi
if [ -f "robust.flag" ]; then
  try_backup_on=yes
fi
if [ -f "robust-in.flag" ]; then
  try_backup_on=yes
fi
if [ $try_backup_on = $say_no ]; then
  exit 3
fi



# Now I assemble the file: temporary--chorebox-in.pl --- a *temporary* copy
# of the wrapper script.
sh "${origidir}/perlstrict.sh" temporary--chorebox-in.pl
sh "${origidir}/perldumpy.sh" "${origidir}/chorebox-in.seg.pl" \
temporary--chorebox-in.pl

sh "${origidir}/perldumpy.sh" "${origidir}/specified_var_option.fn.pl" \
temporary--chorebox-in.pl

sh "${origidir}/perldumpy.sh" "${origidir}/if_not_specified.fn.pl" \
temporary--chorebox-in.pl

sh "${origidir}/perldumpy.sh" "${origidir}/directory_subset.fn.pl" \
temporary--chorebox-in.pl

#sh "${origidir}/perldumpy.sh" "${origidir}/apnd_shrunk_argument.fn.pl" \
#temporary--chorebox-in.pl

sh "${origidir}/perldumpy.sh" "${origidir}/goodarray.fn.pl" \
temporary--chorebox-in.pl


if [ $native_conf_here = $say_yes ]; then
  exec ./temporary--chorebox-in "${origidir}/configure" "$@"
else
  perl -c temporary--chorebox-in.pl || exit 4
  exec perl temporary--chorebox-in.pl "${origidir}/configure" "$@"
fi


